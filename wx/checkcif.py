#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.3 on Sun Jul 14 21:28:12 2019
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class checkcifgui(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: checkcifgui.__init__
        kwds["style"] = kwds.get("style", 0) | wx.CAPTION | wx.CLIP_CHILDREN | wx.CLOSE_BOX | wx.FRAME_TOOL_WINDOW | wx.MAXIMIZE_BOX | wx.MINIMIZE | wx.RESIZE_BORDER | wx.SYSTEM_MENU
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1061, 586))
        self.user_list = wx.ListBox(self, wx.ID_ANY, choices=[], style=wx.LB_HSCROLL | wx.LB_SINGLE)
        colors=["'White'", "'Green'", "'Red'", "'Blue'", "'Yellow'", "'Black'", "'Pink'", "'Purple'", "'Orange'", "'Grey'", "'Aqua'", "'Brown'", "'Colourless'"]
        self.colours = wx.ComboBox(self, wx.ID_ANY, choices=[_("colors")], style=wx.CB_DROPDOWN)
        self.crystalshape = wx.ComboBox(self, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.xsize = wx.TextCtrl(self, wx.ID_ANY, "")
        self.ysize = wx.TextCtrl(self, wx.ID_ANY, "")
        self.zsize = wx.TextCtrl(self, wx.ID_ANY, "")
        self.valtemp_copy_copy_copy = wx.TextCtrl(self, wx.ID_ANY, "")
        self.spacehm = wx.TextCtrl(self, wx.ID_ANY, "")
        self.zsetting = wx.TextCtrl(self, wx.ID_ANY, "")
        self.abs_min = wx.TextCtrl(self, wx.ID_ANY, "")
        self.abs_max = wx.TextCtrl(self, wx.ID_ANY, "")
        self.valtemp = wx.TextCtrl(self, wx.ID_ANY, "")
        self.valtemp_copy_copy = wx.TextCtrl(self, wx.ID_ANY, "")
        self.instrumentsettings = wx.ComboBox(self, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.okay = wx.Button(self, wx.ID_ANY, _("OK"))
        self.cancel = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: checkcifgui.__set_properties
        self.SetTitle(_("Prepare cif for publication"))
        self.user_list.SetMinSize((200, 197))
        self.colours.SetMinSize((200, -1))
        self.crystalshape.SetMinSize((200, -1))
        self.xsize.SetMinSize((150, -1))
        self.ysize.SetMinSize((150, -1))
        self.zsize.SetMinSize((150, -1))
        self.valtemp_copy_copy_copy.SetMinSize((150, -1))
        self.spacehm.SetMinSize((150, -1))
        self.zsetting.SetMinSize((150, -1))
        self.abs_min.SetMinSize((150, -1))
        self.abs_max.SetMinSize((150, -1))
        self.valtemp.SetMinSize((150, -1))
        self.valtemp_copy_copy.SetMinSize((150, -1))
        self.instrumentsettings.SetMinSize((200, -1))
        self.okay.SetDefault()
        self.cancel.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: checkcifgui.__do_layout
        main_sizer1 = wx.BoxSizer(wx.VERTICAL)
        main_sizer2 = wx.BoxSizer(wx.VERTICAL)
        footer = wx.GridSizer(1, 2, 0, 0)
        main_panel = wx.BoxSizer(wx.HORIZONTAL)
        parameters_sizer = wx.BoxSizer(wx.HORIZONTAL)
        other_setting_sizer = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, _("Other Settings")), wx.VERTICAL)
        othersetting_gsizer = wx.FlexGridSizer(5, 2, 15, 10)
        crystal_setting_sizer = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, _("Crystal Setting")), wx.VERTICAL)
        crystalsetting_gsizer = wx.FlexGridSizer(8, 2, 15, 10)
        main_panel.Add(self.user_list, 0, wx.ALL | wx.EXPAND, 10)
        colour = wx.StaticText(self, wx.ID_ANY, _("Colour:"))
        crystalsetting_gsizer.Add(colour, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        crystalsetting_gsizer.Add(self.colours, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        ylabel_copy = wx.StaticText(self, wx.ID_ANY, _("Crystal shape:"))
        crystalsetting_gsizer.Add(ylabel_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        crystalsetting_gsizer.Add(self.crystalshape, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        xlabel = wx.StaticText(self, wx.ID_ANY, _("x, mm:"))
        crystalsetting_gsizer.Add(xlabel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        crystalsetting_gsizer.Add(self.xsize, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        ylabel = wx.StaticText(self, wx.ID_ANY, _("y, mm:"))
        crystalsetting_gsizer.Add(ylabel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        crystalsetting_gsizer.Add(self.ysize, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        zlabel = wx.StaticText(self, wx.ID_ANY, _("z, mm:"))
        crystalsetting_gsizer.Add(zlabel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        crystalsetting_gsizer.Add(self.zsize, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        cellsetting = wx.StaticText(self, wx.ID_ANY, _("Cell setting:"))
        crystalsetting_gsizer.Add(cellsetting, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        crystalsetting_gsizer.Add(self.valtemp_copy_copy_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        spacegp = wx.StaticText(self, wx.ID_ANY, _("Space Group H-M:"))
        crystalsetting_gsizer.Add(spacegp, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        crystalsetting_gsizer.Add(self.spacehm, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        znum = wx.StaticText(self, wx.ID_ANY, _("Z:"))
        crystalsetting_gsizer.Add(znum, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        crystalsetting_gsizer.Add(self.zsetting, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        crystal_setting_sizer.Add(crystalsetting_gsizer, 1, wx.ALL | wx.EXPAND, 10)
        parameters_sizer.Add(crystal_setting_sizer, 1, wx.ALL | wx.EXPAND, 10)
        absmin = wx.StaticText(self, wx.ID_ANY, _("abs_T_min:"))
        othersetting_gsizer.Add(absmin, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 0)
        othersetting_gsizer.Add(self.abs_min, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 0)
        absmax = wx.StaticText(self, wx.ID_ANY, _("abs_T_max:"))
        othersetting_gsizer.Add(absmax, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        othersetting_gsizer.Add(self.abs_max, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        ltemp = wx.StaticText(self, wx.ID_ANY, _("Temperature, K:"))
        othersetting_gsizer.Add(ltemp, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        othersetting_gsizer.Add(self.valtemp, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        hlabel_copy = wx.StaticText(self, wx.ID_ANY, _("Hydrogen Treatment:"))
        othersetting_gsizer.Add(hlabel_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        othersetting_gsizer.Add(self.valtemp_copy_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        instrument = wx.StaticText(self, wx.ID_ANY, _("Instrument setting:"))
        othersetting_gsizer.Add(instrument, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        othersetting_gsizer.Add(self.instrumentsettings, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        other_setting_sizer.Add(othersetting_gsizer, 1, wx.ALL | wx.EXPAND, 10)
        parameters_sizer.Add(other_setting_sizer, 1, wx.ALL | wx.EXPAND, 10)
        main_panel.Add(parameters_sizer, 1, wx.EXPAND, 0)
        main_sizer2.Add(main_panel, 5, wx.EXPAND, 0)
        footer.Add(self.okay, 0, wx.ALIGN_CENTER, 0)
        footer.Add(self.cancel, 0, wx.ALIGN_CENTER | wx.ALL, 10)
        main_sizer2.Add(footer, 1, wx.ALIGN_CENTER | wx.EXPAND, 0)
        main_sizer1.Add(main_sizer2, 1, wx.EXPAND, 0)
        self.SetSizer(main_sizer1)
        self.Layout()
        self.Centre()
        # end wxGlade

# end of class checkcifgui

class MyApp(wx.App):
    def OnInit(self):
        self.frame = checkcifgui(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = MyApp(0)
    app.MainLoop()
